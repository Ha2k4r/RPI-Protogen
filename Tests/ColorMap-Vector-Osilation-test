import cv2
import numpy as np
import time

StartTime=time.time()
ElapsedTime = time.time()
BlinkDisplayDuration = 6
IsBlink=False
BlinkState=False #True for Closed False for Open
Y=0
I=0
SucessfullRunthroughs = 0

MovingColorMap = cv2.VideoCapture('WHOH1.gif')

Prootbefore = cv2.imread('Prootbefore.png')

blank = np.zeros([32, 64], dtype='uint8')

#        Width1                   Height1
EyeVertices = np.array([
    [0,    3], #far Left
    [6,    5],
    [11,   5],
    [20,   7],
    [24,   6],
    [24,   4],
    [18,   1],
    [15,   0],
    [12,   0] #top left on top of the angle
], np.int32)

EyeVerticesDefault = np.copy(EyeVertices)#                             this stores the defaults

MouthVertices = np.array([
    [14,  19],
    [32,  29],
    [45,  23],
    [53,  23],
    [61,  26],
    [59,  27],
    [52,  25],
    [46,  25],
    [34,  31],
    [29,  31],
    [19,  25],
    [11,  25],
    [7,   21],
    [10,  20]

], np.int32)

NoseVertices = np.array([
    #counterclockwise
    [63,  10],#bottom of nose
    [63,  6],
    [63,  4],
    [61,  2],
    [56,  1],
    [56,  1],
    [53,  2], #far left of nose end point
    [57,  2],
    [61,  5],
    [63, 10],


], np.int32)


def BlinkUpdate():
    global IsBlink
    global SucessfullRunthroughs
    global BlinkState
    global Y
    global I
    XY = EyeVertices[I]
    XYD = EyeVerticesDefault[I]
    if XY[1] <= 3:
        if BlinkState == True:
            XY[1] = XY[1] + 1
        else:
            if XY[1]==XYD[1]:
                SucessfullRunthroughs=SucessfullRunthroughs+1
            elif XY[1] > XYD[1]:
                XY[1] = XY[1] - 1
            elif XY[1] < XYD[1]:
                XY[1] = XY[1] + 1
    else:
        if BlinkState == True:
            XY[1] = XY[1] - 1
        else:
            if XY[1] == XYD[1]:
                SucessfullRunthroughs=SucessfullRunthroughs+1
            elif XY[1] < XYD[1]:
                XY[1] = XY[1] + 1
            elif XY[1] > XYD[1]:
                XY[1] = XY[1] - 1

    if EyeVertices[3][1] == 3:
        BlinkState=False
    if SucessfullRunthroughs == 16:
        global IsBlink
        global StartTime
        StartTime = time.time()
        IsBlink = False
        SucessfullRunthroughs=0
        I=0
        return None
    I=I+1
    if I >= 9:
        I=0
while True:
    # Capture frame-by-frame
    ret, frame = MovingColorMap.read()
    if ret == True:
        ElapsedTime = time.time() - StartTime
        if IsBlink == True:
            BlinkUpdate()
        elif ElapsedTime >= BlinkDisplayDuration:
            BlinkState = True
            IsBlink = True
            BlinkUpdate()
        blank = np.zeros_like(blank)
        EyeVector = cv2.fillConvexPoly(blank, EyeVertices, 255, 0, 0)
        MouthVector = cv2.fillPoly(blank, [MouthVertices], 255)
        NoseVector = cv2.fillConvexPoly(blank, NoseVertices, 255)
        mask = EyeVector + MouthVector + NoseVector
        #PROOTBEFORE = cv2.resize(Prootbefore, [1600, 800])
        masked = cv2.bitwise_and(frame, frame, mask=mask)
        TEST_OUTPUT = cv2.resize( masked, [1600,800])
        cv2.imshow('TEST_OUTPUT', TEST_OUTPUT)
        #cv2.imshow('BEFORE', PROOTBEFORE)
        # Press Q on keyboard to  exit
        if cv2.waitKey(25) & 0xFF == ord('q'):
            break

    # Break the loop
    else:
       MovingColorMap.set(cv2.CAP_PROP_POS_FRAMES, 0)
